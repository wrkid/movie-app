{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Documents/git/movie-app/src/components/Content/content.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MyPagination from '../Pagination';\nimport MovieCard from '../MovieCard';\nimport ApiService from '../ApiService';\nimport ErrorIndicator from '../ErrorIndicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Content extends React.Component {\n  // ({ title }) {\n\n  constructor() {\n    super();\n    this.onError = err => {\n      this.setState({\n        error: err.name,\n        loading: false\n      });\n    };\n    this.renderItems = () => {\n      const {\n        moviesList\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-list\",\n        children: moviesList.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          data: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this);\n    };\n    this.state = {\n      moviesList: null,\n      error: false,\n      loading: false\n    };\n    this.apiService = new ApiService();\n  }\n  componentDidMount() {\n    const {\n      title\n    } = this.props;\n    if (title !== null) {\n      this.apiService.getAllMovies(title).then(moviesList => {\n        if (moviesList.length !== 0) {\n          this.setState(() => ({\n            moviesList,\n            loading: false,\n            error: false\n          }));\n        } else {\n          this.setState(() => ({\n            error: 'emptyData'\n          }));\n        }\n      }).catch(err => {\n        this.onError(err);\n      });\n    }\n  }\n  render() {\n    const {\n      title\n    } = this.props;\n    const {\n      moviesList,\n      error,\n      loading\n    } = this.state;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorIndicator, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 34\n    }, this) : null;\n    const content = !loading && !error ? this.renderItems() : null;\n    if (moviesList !== null && title !== null) {\n      console.log('');\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [content, errorMessage, /*#__PURE__*/_jsxDEV(MyPagination, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n    return null;\n  }\n}\nContent.defaultProps = {\n  title: ''\n};\nContent.propTypes = {\n  title: PropTypes.string\n};","map":{"version":3,"names":["React","PropTypes","MyPagination","MovieCard","ApiService","ErrorIndicator","jsxDEV","_jsxDEV","Fragment","_Fragment","Content","Component","constructor","onError","err","setState","error","name","loading","renderItems","moviesList","state","className","children","map","movie","data","id","fileName","_jsxFileName","lineNumber","columnNumber","apiService","componentDidMount","title","props","getAllMovies","then","length","catch","render","errorMessage","content","console","log","defaultProps","propTypes","string"],"sources":["/Users/w.k/Documents/git/movie-app/src/components/Content/content.jsx"],"sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport MyPagination from '../Pagination';\nimport MovieCard from '../MovieCard';\nimport ApiService from '../ApiService';\n\nimport ErrorIndicator from '../ErrorIndicator';\n\nexport default class Content extends React.Component { // ({ title }) {\n\n  constructor() {\n    super()\n    this.state = {\n      moviesList: null,\n      error: false,\n      loading: false\n    }\n    this.apiService = new ApiService();\n  }\n\n  componentDidMount() {\n    const { title } = this.props;\n    if (title !== null) {\n      this.apiService\n        .getAllMovies(title)\n        .then((moviesList) => {\n          if (moviesList.length !== 0) {\n            this.setState(() => ({\n              moviesList,\n              loading: false,\n              error: false\n            }));\n          } else {\n            this.setState(() => ({ error: 'emptyData' }));\n          }\n        })\n        .catch((err) => {\n          this.onError(err);\n        });\n    }\n  }\n\n  onError = (err) => {\n    this.setState({\n      error: err.name,\n      loading: false,\n    });\n  };\n\n  renderItems = () => {\n    const { moviesList } = this.state;\n\n    return (\n      <div className=\"movies-list\">\n        {moviesList.map((movie) => (\n          <MovieCard key={movie.id} data={movie} />\n        ))}\n      </div>\n    );\n  }\n  \n  render() {\n    const { title } = this.props;\n    const { moviesList, error, loading } = this.state;\n\n    const errorMessage = error ? <ErrorIndicator error={error} /> : null;\n    const content = !loading && !error ? this.renderItems() : null;\n\n    if (moviesList !== null && title !== null) {\n      console.log('')\n      return (\n        <>\n          {/* { this.renderItems() } */}\n          { content }\n          { errorMessage }\n          <MyPagination />\n        </>\n      );\n    }\n    return null;\n  }\n}\n\nContent.defaultProps = {\n  title: '',\n};\n\nContent.propTypes = {\n  title: PropTypes.string,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}