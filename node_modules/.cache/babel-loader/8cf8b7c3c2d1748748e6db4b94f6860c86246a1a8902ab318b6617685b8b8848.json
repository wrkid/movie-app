{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Documents/git/movie-app/src/components/Content/content.jsx\";\nimport React from 'react';\nimport { Spin } from 'antd';\nimport PropTypes from 'prop-types';\nimport MyPagination from '../Pagination';\nimport MovieCard from '../MovieCard';\nimport ApiService from '../ApiService';\nimport ErrorIndicator from '../ErrorIndicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Content extends React.Component {\n  constructor() {\n    super();\n    this.getMoviesList = async (page = 1) => {\n      const {\n        title\n      } = this.props;\n      if (!title) {\n        return;\n      }\n      await this.apiService.getAllMovies(title, page).then(moviesList => {\n        if (moviesList.results.length !== 0) {\n          this.setState(() => ({\n            moviesList,\n            error: false,\n            loading: false\n          }));\n        } else {\n          this.setState(() => ({\n            error: 'emptyData'\n          }));\n        }\n      }).catch(err => {\n        this.onError(err);\n      });\n    };\n    // getMoviesList = () => this.setState({moviesList: this.apiService.getAllMoviesTest(), loading: false});\n    this.onError = err => {\n      this.setState({\n        error: err.name\n      });\n    };\n    this.changePage = page => {\n      this.getMoviesList(page);\n    };\n    this.renderItems = () => {\n      const {\n        moviesList\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-list\",\n        children: moviesList.results.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          data: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this);\n    };\n    this.state = {\n      moviesList: null,\n      error: false,\n      loading: false\n    };\n    this.apiService = new ApiService();\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      title\n    } = this.props;\n    if (title !== prevProps.title) {\n      this.setState({\n        moviesList: null,\n        loading: true\n      });\n      this.getMoviesList();\n    }\n  }\n  componentDidCatch() {\n    this.setState({\n      error: true\n    });\n  }\n  render() {\n    const {\n      moviesList,\n      error,\n      loading\n    } = this.state;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorIndicator, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 34\n    }, this) : null;\n    const spinner = !error && loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 41\n    }, this) : null;\n    const content = !error && moviesList !== null ? this.renderItems() : null;\n    const pagination = !error && content !== null ? /*#__PURE__*/_jsxDEV(MyPagination, {\n      changePage: page => this.changePage(page),\n      total: moviesList.total_results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [content, errorMessage, spinner, pagination]\n    }, void 0, true);\n  }\n}\nContent.defaultProps = {\n  title: ''\n};\nContent.propTypes = {\n  title: PropTypes.string\n};","map":{"version":3,"names":["React","Spin","PropTypes","MyPagination","MovieCard","ApiService","ErrorIndicator","jsxDEV","_jsxDEV","Fragment","_Fragment","Content","Component","constructor","getMoviesList","page","title","props","apiService","getAllMovies","then","moviesList","results","length","setState","error","loading","catch","err","onError","name","changePage","renderItems","state","className","children","map","movie","data","id","fileName","_jsxFileName","lineNumber","columnNumber","componentDidUpdate","prevProps","componentDidCatch","render","errorMessage","spinner","size","content","pagination","total","total_results","defaultProps","propTypes","string"],"sources":["/Users/w.k/Documents/git/movie-app/src/components/Content/content.jsx"],"sourcesContent":["import React from 'react';\n\nimport { Spin } from 'antd';\n\nimport PropTypes from 'prop-types';\n\nimport MyPagination from '../Pagination';\nimport MovieCard from '../MovieCard';\nimport ApiService from '../ApiService';\n\nimport ErrorIndicator from '../ErrorIndicator';\n\nexport default class Content extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      moviesList: null,\n      error: false,\n      loading: false,\n    };\n    this.apiService = new ApiService();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { title } = this.props;\n    if (title !== prevProps.title) {\n      this.setState({\n        moviesList: null,\n        loading: true,\n      });\n      this.getMoviesList();\n    }\n  }\n\n  componentDidCatch() {\n    this.setState({\n      error: true\n    })\n  }\n\n  getMoviesList = async (page = 1) => {\n    const { title } = this.props;\n    if (!title) {\n      return;\n    }\n    await this.apiService\n      .getAllMovies(title, page)\n      .then((moviesList) => {\n        if (moviesList.results.length !== 0) {\n          this.setState(() => ({\n            moviesList,\n            error: false,\n            loading: false,\n          }));\n        } else {\n          this.setState(() => ({ error: 'emptyData' }));\n        }\n      })\n      .catch((err) => {\n        this.onError(err);\n      });\n  };\n\n  // getMoviesList = () => this.setState({moviesList: this.apiService.getAllMoviesTest(), loading: false});\n\n  onError = (err) => {\n    this.setState({\n      error: err.name,\n    });\n  };\n\n  changePage = (page) => {\n    this.getMoviesList(page);\n  };\n\n  renderItems = () => {\n    const { moviesList } = this.state;\n    return (\n      <div className=\"movies-list\">\n        {moviesList.results.map((movie) => (\n          <MovieCard key={movie.id} data={movie} />\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    const { moviesList, error, loading } = this.state;\n\n    const errorMessage = error ? <ErrorIndicator error={error} /> : null;\n    const spinner = !error && loading ? <Spin size=\"large\" /> : null;\n    const content = !error && moviesList !== null ? this.renderItems() : null;\n    const pagination =\n      !error && content !== null ? (\n        <MyPagination\n          changePage={(page) => this.changePage(page)}\n          total={moviesList.total_results}\n        />\n      ) : null;\n\n    return (\n      <>\n        {content}\n        {errorMessage}\n        {spinner}\n        {pagination}\n      </>\n    );\n  }\n}\n\nContent.defaultProps = {\n  title: '',\n};\n\nContent.propTypes = {\n  title: PropTypes.string,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}