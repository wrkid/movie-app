{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Documents/git/movie-app/src/components/Content/content.jsx\";\nimport React from 'react';\nimport { Spin } from 'antd';\nimport PropTypes from 'prop-types';\nimport MyPagination from '../Pagination';\nimport MovieCard from '../MovieCard';\nimport ApiService from '../ApiService';\nimport ErrorIndicator from '../ErrorIndicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Content extends React.Component {\n  constructor() {\n    super();\n    // getMoviesList = async (page = 1) => {\n    //   const { title } = this.props;\n    //   if (!title) {\n    //     return;\n    //   }\n    //   await this.apiService\n    //     .getAllMovies(title, page)\n    //     .then((moviesList) => {\n    //       console.log(moviesList)\n    //       if (moviesList.results.length !== 0) {\n    //         this.setState(() => ({\n    //           moviesList,\n    //           error: false,\n    //           loading: false,\n    //         }));\n    //       } else {\n    //         this.setState(() => ({ error: 'emptyData' }));\n    //       }\n    //     })\n    //     .catch((err) => {\n    //       this.onError(err);\n    //     });\n    // };\n    this.getMoviesList = () => {\n      return this.apiService.getAllMoviesTest();\n    };\n    // onError = (err) => {\n    //   this.setState({\n    //     error: err.name,\n    //   });\n    // };\n    this.changePage = page => {\n      this.getMoviesList(page);\n    };\n    this.renderItems = () => {\n      const {\n        moviesList\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-list\",\n        children: moviesList.results.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          data: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this);\n    };\n    this.state = {\n      moviesList: null,\n      error: false,\n      loading: false\n    };\n    this.apiService = new ApiService();\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      title\n    } = this.props;\n    if (title !== prevProps.title) {\n      this.setState({\n        moviesList: null,\n        loading: true\n      });\n      this.getMoviesList();\n    }\n  }\n  render() {\n    const {\n      moviesList,\n      error,\n      loading\n    } = this.state;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorIndicator, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 34\n    }, this) : null;\n    const spinner = !error && loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }, this) : null;\n    const content = !error && moviesList !== null ? this.renderItems() : null;\n    const pagination = !error && content !== null ? /*#__PURE__*/_jsxDEV(MyPagination, {\n      changePage: page => this.changePage(page),\n      total: moviesList.total_results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [content, errorMessage, spinner, pagination]\n    }, void 0, true);\n  }\n}\nContent.defaultProps = {\n  title: ''\n};\nContent.propTypes = {\n  title: PropTypes.string\n};","map":{"version":3,"names":["React","Spin","PropTypes","MyPagination","MovieCard","ApiService","ErrorIndicator","jsxDEV","_jsxDEV","Fragment","_Fragment","Content","Component","constructor","getMoviesList","apiService","getAllMoviesTest","changePage","page","renderItems","moviesList","state","className","children","results","map","movie","data","id","fileName","_jsxFileName","lineNumber","columnNumber","error","loading","componentDidUpdate","prevProps","title","props","setState","render","errorMessage","spinner","size","content","pagination","total","total_results","defaultProps","propTypes","string"],"sources":["/Users/w.k/Documents/git/movie-app/src/components/Content/content.jsx"],"sourcesContent":["import React from 'react';\n\nimport { Spin } from 'antd';\n\nimport PropTypes from 'prop-types';\n\nimport MyPagination from '../Pagination';\nimport MovieCard from '../MovieCard';\nimport ApiService from '../ApiService';\n\nimport ErrorIndicator from '../ErrorIndicator';\n\nexport default class Content extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      moviesList: null,\n      error: false,\n      loading: false,\n    };\n    this.apiService = new ApiService();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { title } = this.props;\n    if (title !== prevProps.title) {\n      this.setState({\n        moviesList: null,\n        loading: true,\n      });\n      this.getMoviesList();\n    }\n  }\n\n  // getMoviesList = async (page = 1) => {\n  //   const { title } = this.props;\n  //   if (!title) {\n  //     return;\n  //   }\n  //   await this.apiService\n  //     .getAllMovies(title, page)\n  //     .then((moviesList) => {\n  //       console.log(moviesList)\n  //       if (moviesList.results.length !== 0) {\n  //         this.setState(() => ({\n  //           moviesList,\n  //           error: false,\n  //           loading: false,\n  //         }));\n  //       } else {\n  //         this.setState(() => ({ error: 'emptyData' }));\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       this.onError(err);\n  //     });\n  // };\n\n  getMoviesList = () => {\n    return this.apiService.getAllMoviesTest();\n  }\n\n  // onError = (err) => {\n  //   this.setState({\n  //     error: err.name,\n  //   });\n  // };\n\n  changePage = (page) => {\n    this.getMoviesList(page);\n  };\n\n  renderItems = () => {\n    const { moviesList } = this.state;\n    return (\n      <div className=\"movies-list\">\n        {moviesList.results.map((movie) => (\n          <MovieCard key={movie.id} data={movie} />\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    const { moviesList, error, loading } = this.state;\n\n    const errorMessage = error ? <ErrorIndicator error={error} /> : null;\n    const spinner = !error && loading ? <Spin size=\"large\" /> : null;\n    const content = !error && moviesList !== null ? this.renderItems() : null;\n    const pagination =\n      !error && content !== null ? (\n        <MyPagination\n          changePage={(page) => this.changePage(page)}\n          total={moviesList.total_results}\n        />\n      ) : null;\n\n    return (\n      <>\n        {content}\n        {errorMessage}\n        {spinner}\n        {pagination}\n      </>\n    );\n  }\n}\n\nContent.defaultProps = {\n  title: '',\n};\n\nContent.propTypes = {\n  title: PropTypes.string,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}