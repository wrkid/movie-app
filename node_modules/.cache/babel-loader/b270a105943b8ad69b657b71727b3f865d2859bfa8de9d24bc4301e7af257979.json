{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Documents/git/movie-app/src/components/Content/content.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MyPagination from '../Pagination';\nimport MovieCard from '../MovieCard';\nimport ApiService from '../ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Content extends React.Component {\n  // ({ title }) {\n\n  constructor() {\n    super();\n    this.renderItems = () => {\n      console.log();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-list\",\n        children: this.moviesList.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          data: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this);\n    };\n    this.state = {\n      moviesList: null\n    };\n    this.apiService = new ApiService();\n  }\n  componentDidMount() {\n    const {\n      title\n    } = this.props;\n    this.apiService.getAllMovies(title).then(moviesList => {\n      this.setState({\n        moviesList\n      });\n    });\n  }\n  render() {\n    const {\n      title\n    } = this.props;\n    const {\n      moviesList\n    } = this.state;\n    if (moviesList !== null && title !== null) {\n      console.log('here');\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [this.renderItems(title), /*#__PURE__*/_jsxDEV(MyPagination, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n    return null;\n  }\n}\nContent.defaultProps = {\n  title: ''\n};\nContent.propTypes = {\n  title: PropTypes.string\n};","map":{"version":3,"names":["React","PropTypes","MyPagination","MovieCard","ApiService","jsxDEV","_jsxDEV","Fragment","_Fragment","Content","Component","constructor","renderItems","console","log","className","children","moviesList","map","movie","data","id","fileName","_jsxFileName","lineNumber","columnNumber","state","apiService","componentDidMount","title","props","getAllMovies","then","setState","render","defaultProps","propTypes","string"],"sources":["/Users/w.k/Documents/git/movie-app/src/components/Content/content.jsx"],"sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport MyPagination from '../Pagination';\nimport MovieCard from '../MovieCard';\nimport ApiService from '../ApiService';\n\nexport default class Content extends React.Component { // ({ title }) {\n\n  constructor() {\n    super()\n    this.state = {\n      moviesList: null\n    }\n    this.apiService = new ApiService();\n  }\n\n  componentDidMount() {\n    const { title } = this.props;\n    this.apiService\n      .getAllMovies(title)\n      .then((moviesList) => {\n        this.setState({\n          moviesList\n        })\n      })\n  }\n\n  renderItems = () => {\n    console.log()\n    return (\n      <div className=\"movies-list\">\n        {this.moviesList.map((movie) => (\n          <MovieCard key={movie.id} data={movie} />\n        ))}\n      </div>\n    );\n  }\n  \n  render() {\n    const { title } = this.props;\n    const { moviesList } = this.state;\n\n    if (moviesList !== null && title !== null) {\n      console.log('here')\n      return (\n        <>\n          {this.renderItems(title)}\n          <MyPagination />\n        </>\n      );\n    }\n    return null;\n  }\n}\n\nContent.defaultProps = {\n  title: '',\n};\n\nContent.propTypes = {\n  title: PropTypes.string,\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,eAAe,MAAMC,OAAO,SAAST,KAAK,CAACU,SAAS,CAAC;EAAE;;EAErDC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAA,KAkBTC,WAAW,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,CAAC;MACb,oBACER,OAAA;QAAKS,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzB,IAAI,CAACC,UAAU,CAACC,GAAG,CAAEC,KAAK,iBACzBb,OAAA,CAACH,SAAS;UAAgBiB,IAAI,EAAED;QAAM,GAAtBA,KAAK,CAACE,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAEV,CAAC;IA1BC,IAAI,CAACC,KAAK,GAAG;MACXT,UAAU,EAAE;IACd,CAAC;IACD,IAAI,CAACU,UAAU,GAAG,IAAIvB,UAAU,CAAC,CAAC;EACpC;EAEAwB,iBAAiBA,CAAA,EAAG;IAClB,MAAM;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IAC5B,IAAI,CAACH,UAAU,CACZI,YAAY,CAACF,KAAK,CAAC,CACnBG,IAAI,CAAEf,UAAU,IAAK;MACpB,IAAI,CAACgB,QAAQ,CAAC;QACZhB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAaAiB,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEL;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IAC5B,MAAM;MAAEb;IAAW,CAAC,GAAG,IAAI,CAACS,KAAK;IAEjC,IAAIT,UAAU,KAAK,IAAI,IAAIY,KAAK,KAAK,IAAI,EAAE;MACzChB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,oBACER,OAAA,CAAAE,SAAA;QAAAQ,QAAA,GACG,IAAI,CAACJ,WAAW,CAACiB,KAAK,CAAC,eACxBvB,OAAA,CAACJ,YAAY;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eAChB,CAAC;IAEP;IACA,OAAO,IAAI;EACb;AACF;AAEAhB,OAAO,CAAC0B,YAAY,GAAG;EACrBN,KAAK,EAAE;AACT,CAAC;AAEDpB,OAAO,CAAC2B,SAAS,GAAG;EAClBP,KAAK,EAAE5B,SAAS,CAACoC;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}