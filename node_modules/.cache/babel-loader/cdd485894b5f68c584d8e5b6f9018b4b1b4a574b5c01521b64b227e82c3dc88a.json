{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Documents/git/movie-app/src/components/Content/content.jsx\";\nimport React from 'react';\nimport { Spin } from 'antd';\nimport PropTypes from 'prop-types';\nimport MyPagination from '../Pagination';\nimport MovieCard from '../MovieCard';\nimport ApiService from '../ApiService';\nimport ErrorIndicator from '../ErrorIndicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Content extends React.Component {\n  // ({ title }) {\n\n  constructor() {\n    super();\n    this.getMoviesList = async (page = 1) => {\n      const {\n        title\n      } = this.props;\n      if (!title) {\n        return;\n      }\n      this.apiService.getAllMovies(title, page).then(moviesList => {\n        if (moviesList.results.length !== 0) {\n          this.setState(() => ({\n            moviesList,\n            error: false\n          }));\n        } else {\n          this.setState(() => ({\n            error: 'emptyData'\n          }));\n        }\n      }).catch(err => {\n        this.onError(err);\n      });\n    };\n    this.onError = err => {\n      this.setState({\n        error: err.name\n      });\n    };\n    this.changePage = page => {\n      this.getMoviesList(page);\n    };\n    this.renderItems = () => {\n      const {\n        moviesList\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-list\",\n        children: moviesList.results.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          data: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this);\n    };\n    this.state = {\n      moviesList: null,\n      error: false,\n      loading: false\n    };\n    this.apiService = new ApiService();\n    this.getMoviesList();\n  }\n  componentDidMount() {\n    this.getMoviesList();\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      title\n    } = this.props;\n    if (title !== prevProps.title) {\n      this.setState({\n        moviesList: null\n      });\n      this.getMoviesList();\n    }\n  }\n  render() {\n    const {\n      title\n    } = this.props;\n    const {\n      moviesList,\n      error,\n      loading\n    } = this.state;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorIndicator, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 34\n    }, this) : null;\n    const spinner = !error && l === null ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 44\n    }, this) : null;\n    const content = !error && moviesList ? this.renderItems() : null;\n    const pagination = !error && content !== null ? /*#__PURE__*/_jsxDEV(MyPagination, {\n      changePage: page => this.changePage(page),\n      total: moviesList.total_results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 53\n    }, this) : null;\n    if (title === null) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [content, errorMessage, spinner, pagination]\n    }, void 0, true);\n  }\n}\nContent.defaultProps = {\n  title: ''\n};\nContent.propTypes = {\n  title: PropTypes.string\n};","map":{"version":3,"names":["React","Spin","PropTypes","MyPagination","MovieCard","ApiService","ErrorIndicator","jsxDEV","_jsxDEV","Fragment","_Fragment","Content","Component","constructor","getMoviesList","page","title","props","apiService","getAllMovies","then","moviesList","results","length","setState","error","catch","err","onError","name","changePage","renderItems","state","className","children","map","movie","data","id","fileName","_jsxFileName","lineNumber","columnNumber","loading","componentDidMount","componentDidUpdate","prevProps","render","errorMessage","spinner","l","size","content","pagination","total","total_results","defaultProps","propTypes","string"],"sources":["/Users/w.k/Documents/git/movie-app/src/components/Content/content.jsx"],"sourcesContent":["import React from 'react';\n\nimport { Spin } from 'antd';\n\nimport PropTypes from 'prop-types';\n\nimport MyPagination from '../Pagination';\nimport MovieCard from '../MovieCard';\nimport ApiService from '../ApiService';\n\nimport ErrorIndicator from '../ErrorIndicator';\n\nexport default class Content extends React.Component { // ({ title }) {\n\n  constructor() {\n    super()\n    this.state = {\n      moviesList: null,\n      error: false,\n      loading: false\n    }\n    this.apiService = new ApiService();\n    this.getMoviesList();\n  }\n\n  componentDidMount() {\n    this.getMoviesList();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { title } = this.props;\n    if (title !== prevProps.title) {\n      this.setState({\n        moviesList: null\n      })\n      this.getMoviesList();\n    }\n  }\n\n  getMoviesList = async (page = 1) => {\n    const { title } = this.props;\n    if (!title) {\n      return;\n    }\n    this.apiService\n      .getAllMovies(title, page)\n      .then((moviesList) => {\n        if (moviesList.results.length !== 0) {\n          this.setState(() => ({\n            moviesList,\n            error: false\n          }));\n        } else {\n          this.setState(() => ({ error: 'emptyData' }));\n        }\n      })\n      .catch((err) => {\n        this.onError(err);\n      });\n  }\n\n  onError = (err) => {\n    this.setState({\n      error: err.name,\n    });\n  };\n\n  changePage = (page) => {\n    this.getMoviesList(page)\n  }\n\n  renderItems = () => {\n    const { moviesList } = this.state;\n    return (\n      <div className=\"movies-list\">\n        {moviesList.results.map((movie) => (\n          <MovieCard key={movie.id} data={movie} />\n        ))}\n      </div>\n    );\n  }\n  \n  render() {\n    const { title } = this.props;\n    const { moviesList, error, loading } = this.state;\n\n    const errorMessage = error ? <ErrorIndicator error={error} /> : null;\n    const spinner = !error && l === null ? <Spin size=\"large\" /> : null;\n    const content = !error && moviesList ? this.renderItems() : null;\n    const pagination = !error && content !== null ? <MyPagination changePage = {(page) => this.changePage(page)}total = {moviesList.total_results}/> : null;\n\n    if (title === null) \n      return null;\n    return (\n      <>\n        { content }\n        { errorMessage }\n        { spinner }\n        { pagination }\n      </>\n    );\n  }\n}\n\nContent.defaultProps = {\n  title: '',\n};\n\nContent.propTypes = {\n  title: PropTypes.string,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}