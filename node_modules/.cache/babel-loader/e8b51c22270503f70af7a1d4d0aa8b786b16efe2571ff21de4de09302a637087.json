{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Documents/git/movie-app/src/components/MovieGenres/movie-genres.jsx\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport ApiService from \"../ApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MovieGenres extends React.Component {\n  constructor() {\n    super();\n    this.apiService = new ApiService();\n    // отловить ошибку на картинку\n    this.getItems = tags => {\n      this.apiService.getMovieGenres(tags).then(res => {\n        this.setState({\n          tagsList: res,\n          error: false\n        });\n      }).catch(err => {\n        this.onError(err);\n      });\n    };\n    this.onError = () => {\n      this.setState({\n        error: 'emptyData'\n      });\n    };\n    this.renderItems = () => {\n      const {\n        tagsList\n      } = this.state;\n      if (tagsList) {\n        return tagsList.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tag\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: tag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this));\n      }\n      return null;\n    };\n    this.state = {\n      tagsList: null\n    };\n  }\n  componentDidMount() {\n    const {\n      genreIds\n    } = this.props;\n    this.getItems(genreIds);\n  }\n  render() {\n    const {\n      error\n    } = this.state;\n    const failedTags = error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tag\",\n      children: \"Failed to load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 32\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-tags\",\n      children: [failedTags, this.renderItems()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n}\nMovieGenres.defaultProps = {\n  genreIds: []\n};\nMovieGenres.propTypes = {\n  genreIds: PropTypes.arrayOf(PropTypes.number)\n};","map":{"version":3,"names":["React","PropTypes","ApiService","jsxDEV","_jsxDEV","MovieGenres","Component","constructor","apiService","getItems","tags","getMovieGenres","then","res","setState","tagsList","error","catch","err","onError","renderItems","state","map","tag","className","children","fileName","_jsxFileName","lineNumber","columnNumber","componentDidMount","genreIds","props","render","failedTags","defaultProps","propTypes","arrayOf","number"],"sources":["/Users/w.k/Documents/git/movie-app/src/components/MovieGenres/movie-genres.jsx"],"sourcesContent":["import React from \"react\";\n\nimport PropTypes from 'prop-types';\n\nimport ApiService from \"../ApiService\";\n\n\nexport default class MovieGenres extends React.Component {\n  apiService = new ApiService();\n\n  constructor() {\n    super();\n    this.state = {\n      tagsList: null\n    }\n  }\n\n  componentDidMount() {\n    const { genreIds } = this.props;\n    this.getItems(genreIds);\n  }\n\n  // отловить ошибку на картинку\n\n  getItems = (tags) => {\n    this.apiService.getMovieGenres(tags)\n      .then(res => {\n        this.setState({\n          tagsList: res,\n          error: false\n        })\n        }\n      )\n      .catch(err => {\n        this.onError(err)\n      })\n  }\n\n  onError = () => {\n    this.setState({\n      error: 'emptyData',\n    });\n  };\n\n  renderItems = () => {\n    const { tagsList } = this.state;\n    if (tagsList) {\n\n      return (\n        tagsList.map((tag) => \n        (\n          <div key = {tag} className=\"tag\">\n            <span >{tag}</span>\n          </div>\n        ))\n      )\n    }\n      return null;\n  };\n\n  render() {\n    const { error } = this.state;\n    const failedTags = error ? <div className=\"tag\">Failed to load</div> : null;\n    return (\n      <div className=\"movie-tags\">\n        {failedTags}\n        {this.renderItems()}\n      </div>\n    )\n  }\n}\n\nMovieGenres.defaultProps = {\n  genreIds: [],\n}\nMovieGenres.propTypes = {\n  genreIds: PropTypes.arrayOf(PropTypes.number)\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,eAAe,MAAMC,WAAW,SAASL,KAAK,CAACM,SAAS,CAAC;EAGvDC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KAHVC,UAAU,GAAG,IAAIN,UAAU,CAAC,CAAC;IAc7B;IAAA,KAEAO,QAAQ,GAAIC,IAAI,IAAK;MACnB,IAAI,CAACF,UAAU,CAACG,cAAc,CAACD,IAAI,CAAC,CACjCE,IAAI,CAACC,GAAG,IAAI;QACX,IAAI,CAACC,QAAQ,CAAC;UACZC,QAAQ,EAAEF,GAAG;UACbG,KAAK,EAAE;QACT,CAAC,CAAC;MACF,CACF,CAAC,CACAC,KAAK,CAACC,GAAG,IAAI;QACZ,IAAI,CAACC,OAAO,CAACD,GAAG,CAAC;MACnB,CAAC,CAAC;IACN,CAAC;IAAA,KAEDC,OAAO,GAAG,MAAM;MACd,IAAI,CAACL,QAAQ,CAAC;QACZE,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDI,WAAW,GAAG,MAAM;MAClB,MAAM;QAAEL;MAAS,CAAC,GAAG,IAAI,CAACM,KAAK;MAC/B,IAAIN,QAAQ,EAAE;QAEZ,OACEA,QAAQ,CAACO,GAAG,CAAEC,GAAG,iBAEfnB,OAAA;UAAiBoB,SAAS,EAAC,KAAK;UAAAC,QAAA,eAC9BrB,OAAA;YAAAqB,QAAA,EAAQF;UAAG;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC,GADTN,GAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN,CAAC;MAEN;MACE,OAAO,IAAI;IACf,CAAC;IA9CC,IAAI,CAACR,KAAK,GAAG;MACXN,QAAQ,EAAE;IACZ,CAAC;EACH;EAEAe,iBAAiBA,CAAA,EAAG;IAClB,MAAM;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACC,KAAK;IAC/B,IAAI,CAACvB,QAAQ,CAACsB,QAAQ,CAAC;EACzB;EAwCAE,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEjB;IAAM,CAAC,GAAG,IAAI,CAACK,KAAK;IAC5B,MAAMa,UAAU,GAAGlB,KAAK,gBAAGZ,OAAA;MAAKoB,SAAS,EAAC,KAAK;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAAG,IAAI;IAC3E,oBACEzB,OAAA;MAAKoB,SAAS,EAAC,YAAY;MAAAC,QAAA,GACxBS,UAAU,EACV,IAAI,CAACd,WAAW,CAAC,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAEV;AACF;AAEAxB,WAAW,CAAC8B,YAAY,GAAG;EACzBJ,QAAQ,EAAE;AACZ,CAAC;AACD1B,WAAW,CAAC+B,SAAS,GAAG;EACtBL,QAAQ,EAAE9B,SAAS,CAACoC,OAAO,CAACpC,SAAS,CAACqC,MAAM;AAC9C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}